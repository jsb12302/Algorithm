class Solution:
    def numIslands(self, grid: [[str]]) -> int:
        count=0

        def dfs(i,j):
            if i<0 or i>=len(grid) or j<0 or j>=len(grid[0]) or grid[i][j] !='1': # 예외처리 - 섬밖으로 벗어난 경우
                return
            grid[i][j]=0 # 육지면 0으로 바꿈, 다시 방문하지 않기 위해서

            dfs(i+1,j) # 위쪽 한칸 이동
            dfs(i-1,j) # 아래쪽 한칸 이동
            dfs(i,j+1) # 오른쪽 한칸 이동
            dfs(i,j-1) # 왼쪽 한칸 이동


        for i in range(len(grid)): # 행 탐색
            for j in range(len(grid[0])): # 열 탐색
                if grid[i][j]=='1': # 육지 만났을때
                    dfs(i,j) # dfs 탐색 실행
                    count+=1
        return count
    
if __name__=="__main__":
    s=Solution()
    print(s.numIslands(grid = [
  ["1","1","1","1","0"],
  ["1","1","0","1","0"],
  ["1","1","0","0","0"],
  ["0","0","0","0","0"]
]))





