class Solution:
    def merge(self, intervals: [[int]]) -> [[int]]:
        merged=[] #합할 리스트 생성
        l=sorted(intervals,key=lambda x:x[0]) #맨 앞 원소 순으로 정렬
        for i in l:
            if merged and i[0] <= merged[-1][1]: #[2,6]에 2가 merged에 들어있는 맨 마지막 원소
				           #[1,3]의 3보다 작으면 
                merged[-1][1]=max(merged[-1][1],i[1]) #6과 merged의 3과 비교해서 큰원소가 새로 만들어질
				  	   # 원소의 맨 마지막이된다.
            else:
                merged+=i, #처음 [1,3]이 merged에 추가됨
		       # 기본 연산 ex) a=[1] b=[2,3] a+=b 결과는 [1,2,3]
		       # ','연산자 ex) a+=b, 결과는[1,[2,3]] 이렇게 콤마는 중첩 리스트 만들어준다.
        return merged

if __name__=="__main__":
    s=Solution()
    print(s.merge([[1,3],[2,6],[8,10],[15,18]]))