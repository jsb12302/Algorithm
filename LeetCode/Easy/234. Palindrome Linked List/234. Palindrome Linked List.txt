# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def isPalindrome(self, head: Optional[ListNode]) -> bool:
        q=collections.deque() #양쪽 삽입 삭제 가능한 데크 사용
        
        if not head: #비어있으면 펠린드롬 완성
            return True
        
        node = head
        while node is not None: #노드가 빌때까지
            q.append(node.val) #데크에 현재 값 넣음
            node=node.next #다음값
            
        while len(q)>1: 
            if q.popleft() != q.pop(): #데크에서 왼쪽 오른쪽 뽑아서 비교함
                return False
        return True